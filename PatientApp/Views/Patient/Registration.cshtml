@model PatientApp.Models.Patient

@{
    ViewBag.Title = "Registration";
}
<hr />
<h1 style="font-size:40px;">Patient Registration</h1>
<hr />
@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Patient successfully registered.</strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
         <div class="form-horizontal">
            <h4 style="text-align:center; font-size:30px;">Enter Patient Information</h4>
            <hr />
           @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <table>
                <tr>
                    <td>
                        <b>
                            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                        </b>
                    </td>
                 <td>   
                     @Html.EditorFor(model => model.FirstName)
                    </td>
               <td>    
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
             </td>
                </tr>  
            
           <tr>
               <td>
                   <b>
                       @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                   </b>
               </td>
               <td>
                        @Html.EditorFor(model => model.LastName)
               </td>
               <td>
                   @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
               </td>
           </tr>
                
                <tr>
                    <td>
                        <b>
                            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                        </b>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Email)
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>
                            @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })
                        </b>
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Age)
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>
                            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                        </b>
                    </td>
                            
                    <td>
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                    </td>
                </tr>
            
                <tr>
                    <td>
                        <b>
                            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
                        </b>
                    </td>
                    <td>
                    Male:   @Html.RadioButton("Gender", "Male")    &nbsp;  &nbsp;
                    Female: @Html.RadioButton("Gender", "Female")
                    </td>
                    <td></td>
                </tr>

           <tr>
               <td>
                   <b>
                       @Html.LabelFor(model => model.Ptype, new { @class = "control-label col-md-2" })
                   </b>
               </td>
               <td>
                   @Html.DropDownListFor(m => m.Ptype, new List<SelectListItem>
                   { new SelectListItem{Text="Normal", Value="Normal"},
                     new SelectListItem{Text="V.I.P.", Value="VIP"}}, "Please select")
               </td>
               <td>
                   @Html.ValidationMessageFor(model => model.Ptype, "", new { @class = "text-danger" })
               </td>
           </tr>
            <tr>
                <td>
                    <b>
                        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                    </b>
                </td>
                <td>
                    @Html.PasswordFor(model => model.Password)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    <b>
                        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
                    </b>
                </td>
                <td>
                    @Html.PasswordFor(model => model.ConfirmPassword)
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </td>
            </tr>    
    </table>
            <hr />
            <br>
            <div class="form-group" style="text-align-last:center;">
                <div class="col-md-offset-2 col-md-10" style="padding-left:129px;">
                    <input type="submit" value="Submit" style="font-size:20px; text-align:center; " class="btn btn-default" />
                </div>
            </div>
        </div>
        
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}
<body style="text-align: center; background-color: #fad2bf;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

       
    }
    <br />
    <div style="color:lightgreen;">
        @Html.ActionLink("Back to Main Page", "MainPage", null, new { @class = "my-class" })
    </div>

</body>
@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('#Dob').datepicker(); //Initialise any date pickers
    });
</script>
<style>
    html,
    body {
        height: 100%;
    }
    div {
        display: inline-block;
        text-align: left;
        font-size: 16px;
    }
    a.my-class {
        color: #98aea4;
    }
        a.my-class:hover {
            color: #1e2220;
        }
</style>
